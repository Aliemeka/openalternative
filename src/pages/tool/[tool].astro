---
import { Image } from "astro:assets"
import { client } from "~/services/apollo"
import { getToolsSlugsQuery, getToolQuery } from "~/queries/tools"
import Layout from "~/layouts/Layout.astro"
import { getScreenshotUrl } from "~/services/screenshotone"
import { response } from "~/utils/response"
import Pattern from "~/components/pattern/Pattern.astro"
import Favicon from "~/components/Favicon.astro"
import { badgeVariants, buttonVariants, listVariants } from "~/styles"

export const getStaticPaths = async () => {
  const { data } = await client.query({
    query: getToolsSlugsQuery,
  })

  return data.tools?.map((tool) => ({ params: { tool: tool?.slug } })) ?? []
}

const { data } = await client.query({
  query: getToolQuery,
  variables: { slug: Astro.params.tool! },
})

const tool = data.tools![0]

if (!tool) {
  return response(404, `${Astro.url}/404`)
}

const imageUrl = tool.website && tool.slug ? await getScreenshotUrl(tool.website, tool.slug) : null
---

<Layout title="Open Source Alternatives">
  <div
    class="relative flex gap-6 p-6 bg-white border rounded-lg shadow overflow-clip md:p-8 md:gap-8"
  >
    <div class="relative z-10 flex flex-col gap-4 grow">
      <div class={listVariants({ size: "lg" })}>
        {tool.website && <Favicon url={tool.website} />}
        <h1 class="text-2xl font-semibold">{tool.name}</h1>
      </div>

      <div class="prose prose-zinc text-gray-600 leading-relaxed max-w-sm">
        <p class="lead">{tool.description}</p>
      </div>

      {
        !!tool.category?.length && (
          <div class:list={[listVariants()]}>
            {tool.category.map((category) => (
              <a
                href={`/category/${category?.slug}`}
                class={badgeVariants({ theme: "pink", size: "lg" })}
              >
                {category?.name}
              </a>
            ))}
          </div>
        )
      }

      <div class:list={["mt-auto", listVariants({ size: "lg" })]}>
        {
          tool.website && (
            <a href={tool.website} class={buttonVariants({ theme: "primary" })} target="_blank">
              Visit Website
            </a>
          )
        }
        {
          tool.repository && (
            <a
              href={tool.repository}
              class={buttonVariants({ theme: "secondary" })}
              target="_blank"
            >
              Repository
            </a>
          )
        }
      </div>
    </div>

    {
      imageUrl && (
        <div class="relative z-10 basis-1/2 flex items-center justify-center p-1.5 rounded-md bg-white shadow-lg shadow-gray-800/5 ring-1 ring-gray-900/5">
          <Image src={imageUrl} alt="" width={1280} height={1024} loading="eager" class="rounded" />
        </div>
      )
    }

    <Pattern width={76} height={56} x="50%" y="-6" squares={[[0, 1]]} />
  </div>
</Layout>
